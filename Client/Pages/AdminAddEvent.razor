@page "/admin/adminaddevent"
@using Microsoft.AspNetCore.Authorization;
@using TicketHiveSpaceKittens.Client.Services;
@using TicketHiveSpaceKittens.Shared.Models
@attribute [Authorize(Roles = "Admin")]
@inject IEventService service;
@inject NavigationManager navManager;

<h3>Add A New Event</h3>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" class="form-control" id="name" @bind="@newEvent.Name" />
            </div>
            <div class="form-group">
                <label for="location">Location:</label>
                <input type="text" class="form-control" id="location" @bind="@newEvent.Location" />
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <textarea class="form-control" id="description" rows="5" @bind="@newEvent.Description"></textarea>
            </div>
            <div class="form-group">
                <label for="ticketPrice">Ticket Price:</label>
                <input type="number" class="form-control" id="ticketPrice" step="0.01" @bind="@newEvent.TicketPrice" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="eventDate">Event Date:</label>
                <input type="date" class="form-control" id="eventDate" @bind="@newEvent.EventDate" />
            </div>
            <div class="form-group">
                <label for="ticketsRemaining">Tickets Remaining:</label>
                <input type="number" class="form-control" id="ticketsRemaining" @bind="@newEvent.TicketsRemaining" />
            </div>
            <div class="form-group">
                <label for="capacity">Number of tickets:</label>
                <input type="number" class="form-control" id="capacity" @bind="@newEvent.TicketsRemaining" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-center">
            <!-------------------------------------The Button and add confirm dialog--------------------------------------------------->
            <button type="submit" class="btn btn-primary" @onclick="AddEvent">
                <i class="fa fa-plus"></i> Add Event
                </button> 
            <ConfirmationDialog Title="Add Event" Class="btn btn-primary" Message="Do you want to add?" ConfirmedChanged=" async confirmed =>
               {
                  if (confirmed)
                  {
                      await AddEvent();
                  }
               }">
            </ConfirmationDialog>
        </div>
    </div>
</div>

@code{
    public EventModel newEvent = new();

    private async Task AddConfirmed(bool confirmed)
    {
        if (confirmed)
        {
            // delete the event
            await AddEvent();
        }
    }


    private async Task AddEvent()
    {
        await service.CreateEventAsync(newEvent);
        navManager.NavigateTo("admin");
    }
}
