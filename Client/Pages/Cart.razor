@page "/cart"
@using Microsoft.AspNetCore.Authorization;
@using TicketHiveSpaceKittens.Client.Services;
@using TicketHiveSpaceKittens.Shared.Models;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@attribute [Authorize]
@inject ICartService cartService
@inject IBookingService bookingService

<h1>Cart</h1>

@if (cartService.GetCartItems().Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in cartService.GetCartItems())
            {
                <tr>
                    <td>@item.Event.Name</td>
                    <td>@item.Event.TicketPrice kr</td>
                    <td><button class="btn btn-danger" @onclick="() => cartService.RemoveFromCartAsync(item)">Remove</button></td>
                    <td>Q: @item.Quantity</td>
                    @if(item.Event.TicketsRemaining > 0)
                    {
                        if (item.Quantity == 1)
                        {
                            <button type="button" @onclick="@(() => cartService.RemoveFromCartAsync(item))">-</button>
                        }
                        else
                        {
                            <button type="button" @onclick="@(() => item.Quantity--)">-</button>
                        }
                        <button type="button" @onclick="@(() => item.Quantity++)">+</button>
                    }
                </tr>
            }
        </tbody>
    </table>
    <h3>Total: @cartService.TotalCartAsync() kr</h3>

    <button class="btn btn-primary mt-3" @onclick="@(() => cartService.AddToCartAsync(e))"> Buy Ticket  </button>

}
else
{
    <h3>Your cart is empty</h3>
}